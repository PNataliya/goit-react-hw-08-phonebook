{"version":3,"file":"static/js/415.d9618f7e.chunk.js","mappings":"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","sources":["components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","redux/contacts/selectors.js","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/ContactEditor/ContactEditor.styled.jsx","components/ContactEditor/ContactEditor.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactData = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Icon = styled.span`\n  height: 30px;\n  width: 30px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: #0084ff3d;\n\n  margin-right: 15px;\n  padding: 5px;\n  border-radius: 3px;\n\n  color: inherit;\n`;\n\nexport const ContactName = styled.p`\n  font-weight: 700;\n  margin-right: 15px;\n`;\n\nexport const ContactNumber = styled.p`\n  font-weight: 700;\n  margin-right: 30px;\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 35px;\n  height: 35px;\n  padding: 5px;\n\n  border: none;\n  border-radius: 3px;\n\n  cursor: pointer;\n  transition: background-color 300ms linear;\n  &:hover,\n  &:focus {\n    background-color: #0084ff;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { FaTrash, FaUserTie } from 'react-icons/fa';\n\nimport {\n  ContactData,\n  ContactName,\n  ContactNumber,\n  Button,\n  Icon,\n} from './Contacts.styled';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const Contact = ({ contactID, name, number }) => {\n  const dispatch = useDispatch();\n  console.log('contactID', contactID);\n  return (\n    <>\n      <ContactData>\n        <Icon>\n          <FaUserTie />\n        </Icon>\n        <ContactName>{name}</ContactName>\n      </ContactData>\n      <ContactData>\n        <ContactNumber>{number}</ContactNumber>\n        <Button\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(contactID))}\n        >\n          <Icon>\n            <FaTrash />\n          </Icon>\n        </Button>\n      </ContactData>\n    </>\n  );\n};\n\n// Contact.prototype = {\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired,\n// };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectItems = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectItems, selectFilter],\n  (items, setFilter) => {\n    switch (setFilter) {\n      case setFilter:\n        return items.filter(contact =>\n          contact.name.toLowerCase().includes(setFilter)\n        );\n      default:\n        return items;\n    }\n  }\n);\n\n// export const selectLoading = state => state.contacts.loading;\n\n// export const selectFilter = state => state.contacts.filter;\n\n// export const selectAllContacts = state => state.contacts.items;\n","import styled from '@emotion/styled';\n\nexport const List = styled.li`\n  width: 450px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { Contact } from '../Contacts/Contacts';\nimport { selectItems } from '../../redux/contacts/selectors';\nimport { List } from './ContactsList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectItems);\n\n  return (\n    contacts && (\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <List key={id}>\n            <Contact name={name} number={number} contactID={id} />\n          </List>\n        ))}\n      </ul>\n    )\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FormEditor = styled.form`\n  width: 400px;\n  margin-bottom: 35px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n`;\n\n// export const FormInput = styled.input`\n//   padding: 5px 10px;\n//   font-size: 14px;\n//   color: #000;\n//   outline: none;\n//   border: 1px solid rgb(0, 0, 0);\n//   border-radius: 3px;\n//   resize: none;\n\n//   :focus {\n//     border-color: rgb(111, 111, 207);\n//   }\n\n//   ::placeholder {\n//     font-size: 12px;\n//     color: rgba(0, 0, 0, 0.75);\n//   }\n// `;\n\n// export const ButtonSubmit = styled.button`\n//   margin-top: 30px;\n//   padding: 10px;\n//   width: 200px;\n//   font-weight: 500;\n\n//   font-size: 20px;\n//   color: #fff;\n//   background-color: #0084ff;\n//   border: none;\n//   border-radius: 6px;\n\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n\n//   cursor: pointer;\n//   transition: background-color, color 250ms linear;\n\n//   :hover,\n//   :focus {\n//     background-color: #000cb6b7;\n//     color: #000;\n//   }\n// `;\n\n// =====\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 10px;\n`;\n\nexport const Title = styled.span`\n  font-weight: 700;\n  padding: 10px;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  /* width: 800px; */\n  padding: 5px 10px;\n\n  font-size: 14px;\n  color: #000;\n\n  outline: none;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 3px;\n\n  :focus {\n    border-color: rgb(111, 111, 207);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 15px;\n  height: 50px;\n  width: 200px;\n  font-weight: 500;\n\n  font-size: 24px;\n  color: #fff;\n  background-color: #0084ff;\n  border: none;\n  border-radius: 6px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  cursor: pointer;\n  transition: background-color, color 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: #000cb6b7;\n    color: #000;\n  }\n`;\n","// import { useDispatch } from 'react-redux';\n// import { addContact } from '../../redux/contacts/operations';\n// import { FormEditor, FormInput, ButtonSubmit } from './ContactEditor.styled';\n\n// export const ContactEditor = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n//     const text = form.elements.text.value;\n//     if (text !== '') {\n//       dispatch(addContact(text));\n//       form.reset();\n//       return;\n//     }\n//     alert('The field cannot be empty. Enter something!!');\n//   };\n\n//   return (\n//     <FormEditor onSubmit={handleSubmit}>\n//       <FormInput\n//         type=\"text\"\n//         name=\"name\"\n//         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//         required\n//       />\n\n//       <ButtonSubmit type=\"submit\">Add contact</ButtonSubmit>\n//     </FormEditor>\n//   );\n// };\n\n// =============\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectItems } from '../../redux/contacts/selectors';\nimport {\n  FormEditor,\n  Label,\n  Title,\n  Input,\n  Button,\n} from './ContactEditor.styled';\nimport { Report } from 'notiflix';\n\nexport const ContactEditor = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectItems);\n  const dispatch = useDispatch();\n\n  const onChangeName = e => setName(e.currentTarget.value);\n  const onChangeNumber = e => setNumber(e.currentTarget.value);\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const newContact = { name, number };\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Report.warning(\n        `${name}`,\n        'This user is already in the contact list.',\n        'OK'\n      );\n      return;\n    }\n\n    dispatch(addContact(newContact));\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormEditor onSubmit={onSubmitForm}>\n      <Label>\n        <Title>Name</Title>\n        <Input\n          onChange={onChangeName}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        <Title>Number</Title>\n        <Input\n          onChange={onChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </FormEditor>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 23px;\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 1.2;\n  align-items: center;\n`;\nexport const Text = styled.p`\n  font-weight: 500;\n  padding: 10px;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n\n  padding: 5px 10px;\n  font-size: 14px;\n  color: inherit;\n\n  outline: none;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 3px;\n\n  :focus {\n    border-color: rgb(111, 111, 207);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.75);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nimport { Label, Title, Text, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    e.preventDefault();\n\n    const { value } = e.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <Title>Sort contacts:</Title>\n      <Label>\n        <Text>Input search query</Text>\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </Label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  handleChange: PropTypes.func,\n  QueryInputId: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.main`\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  flex: auto;\n`;\n\nexport const Container = styled.section`\n  position: relative;\n  margin: 0 auto;\n  padding: 0 35px;\n  max-width: 1280px;\n`;\n\nexport const BoxContacts = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding-top: 60px;\n  padding-bottom: 60px;\n`;\n\nexport const Wrapper = styled.div`\n  margin-right: 100px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const WrapperFilter = styled.div`\n  width: 400px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from '../components/ContactsList/ContactsList';\nimport { ContactEditor } from '../components/ContactEditor/ContactEditor';\nimport { Filter } from '../components/Filter/Filter';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectIsLoading } from '../redux/contacts/selectors';\nimport {\n  BoxContacts,\n  MainContainer,\n  Container,\n  Wrapper,\n  WrapperFilter,\n} from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <MainContainer>\n        <Container>\n          <BoxContacts>\n            <Wrapper>\n              <ContactEditor />\n              <div>{isLoading && 'Request in progress...'}</div>\n              <ContactList />\n            </Wrapper>\n            <WrapperFilter>\n              <Filter />\n            </WrapperFilter>\n          </BoxContacts>\n        </Container>\n      </MainContainer>\n    </>\n  );\n}\n"],"names":["ContactData","styled","Icon","ContactName","ContactNumber","Button","Contact","contactID","name","number","dispatch","useDispatch","console","log","type","onClick","deleteContact","selectItems","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","List","createSelector","setFilter","contact","toLowerCase","includes","ContactList","useSelector","map","id","FormEditor","Label","Title","Input","ContactEditor","useState","setName","setNumber","resetForm","onSubmit","e","preventDefault","newContact","some","Report","addContact","onChange","currentTarget","value","pattern","title","required","Text","Filter","target","MainContainer","Container","BoxContacts","Wrapper","WrapperFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}